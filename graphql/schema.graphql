scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    film(id: ID! @eq): Film @find
    films(
        title: String @where(key: "title", operator: "like")
        description: String @where(key: "description", operator: "like")
        duration: durationRange @whereBetween(key: "length")
        release_year: Int @where(key: "release_year", operator: ">=")
    ): [Film!] @paginate(defaultCount:10)
}
type Mutation {
  createFilm(input: CreateFilmInput! @spread): Film! @create
  createActor(input: CreateActorInput! @spread): Actor! @create
}

input durationRange {
  from: Int!
  to: Int!
}

type Film {
    id: ID!
    title : String!
    release_year : Int!
    length : Int!
    description : String!
    rating : String
    language_id : Int
    special_features : String
    image : String
    critics: [Critic!] @hasMany
    actors: [Actor!] @belongsToMany
}

type Actor {
    id: ID!
    last_name: String!
    first_name: String!
    birth_date: DateTime!
}

type Language {
    id: ID!
    name: String!
}

type Critic {
    id: ID!
    score: Int!
    comment: String!
    user_id: Int!
    film_id: Int!
    film: Film! @belongsTo
}

input CreateFilmInput {
    title : String!
    release_year : Int!
    length : Int!
    description : String!
    rating : String!
    language_id : Int!
    special_features : String!
    image : String!
}

input CreateActorInput {
    last_name: String!
    first_name: String!
    birth_date: DateTime!
}


